exit
short_url.user_id
short_url.id
short_url.title
short_url.url
short_url.valid?
continue
self
url
@url
self.send('url')
self.send('@url')
@url
url
exit
self.send('url')
url
self.send('url')
self.send('@url')
self.send('url')
self
user_id
@user_id
@title
@url
title
url
user_id
id
exit
@url
url
continue
@url
url
continue
@url
url
continue
@url
url
self.class
continue
url
continue
url
@url
url
continue
exit
@url
url
exit
url
email
@email
@name
@url
url
@world!
@hello
@url
exit
@url
url
@url
exit
short_url.errors
short_url.valid?
short_url.errors.clear
short_url.title = "Hello"
short_url
short_url.errors
short_url.reload
short_url.instance_variable_get('@url')
ShortUrl.valid_url?(short_url.url)
short_url.errors.full_messages
short_url.valid?
@short_url
short_url
exit
short_url.url
short_url.instance_variable_get('@url')
short_url.instance_variable.get('@url')
!short_url.instance_variable_get('@url')
ShortUrl.valid_url?(short_url.url)
short_url.errors.clear
short_url.errors.count
short_url.url
short_url.acceptable_url
short_url.errors
short_url.errors.clear
short_url.errors
exit
short_url.errors.count
short_url.valid?
short_url.errors.clear
short_url.errors.add(:url, "sucks")
short_url.valid?
short_url.url = 'http://google.com'
short_url.valid?
short_url.url = 'google.com'
short_url.errors.full_messages
short_url.save
short_url
methods.each { |m| print("#{m}\n") }
methods
@anything
@warden
@db
@record
@model
self.class
this.class
@url
Rails
@Rails
@rails
@app
@controller
@short_url
@model
@controller.errors
@url
@url = ShortUrl.valid_url?(@url)
!(@url)
!@url
if !@url { print('Not!') }
if !@url print("...not!") end
if !@url
!@url
@url
ShortUrl.valid_url?(@url)
short_url.errors.full_messages
short_url.valid?
@url
exit
ShortUrl.valid_url?(@url)
ShortUrl
ShortUrl.valid_url(@url)
@url
short_url.errors.full_messages
short_url.valid?
continue
@controller.send('current_user')
warden.user
exit
warden.user
warden.instance_variable_set('@users', { user: @nick })
warden.user
warden.users
warden.user
exit
@controller.send('current_user')
warden.user
warden.instance_variable_set('@users',{user: @nick})
warden.instance_variable_get('@users')
warden.instance_variable_get('users')
warden.users
warden.instance_variables
warden.user
@controller.send('current_user')
@controller.send('authenticated_user?')
@controller.send('authenticated?')
sign_in(:User, @nick)
exit
warden.class
warden.instance_variable_get('@user')
warden.instance_variable_get('user')
warden.user
warden.@nick
warden.instance_variable_set('user', @nick)
warden.user
warden.authenticated?
warden.instance_variable_set('@user', @nick)
warden.set_instance
warden.set_instance_variable
warden.set_instance_vairable
warden.authenticate @user
warden.authenticate
warden.authenticated?
warden.methods.each {|name| print("#{name}\n") }
warden.methods
warden.set_user(users(:nick))
warden.set_user(@nick)
warden.cookies
warden.authenticate!(@nick)
warden.methods
warden.admin
warden.user
warden.login
warden.login_as(@nick)
warden.user = @nick
warden.user
warden.current_user
warden
@controller.send('warden')
@controller.send('sign_in', @nick)
@controller.send('user_signed_in?')
@controller.send('current_user')
@controller.send('authenticate_user!')
continue
CONTINUE
continue
exit
users(:nick)
User.second
user.second
User.first
users(:nick)
User.all
users.all
users(:nick)
users
user = sign_in users(:nick)
@controller.send('current_user')
exit
@controller.class
@controller.send('authenticate_user!')
@controller.send('authenticate!')
@controller.send('current_user')
@controller.params
@controller.session
@controller
@nick
login_as(@nick)
@controller.class
@controller.send('current_user')
Rails.controller
exit
@controller.send('sign_in', @nick)
@controller.class
@controller.send('current_user')
@controller
this.controller
Rails.app
Rails.application.controller
controller
short_urls_controller
sign_in @nick
@nick
self.class
app
Rails.application.session
Rails.application
Rails.app
Rails
rails
app
continue
