continue
response.body
get '/'
exit
users(:nick)
user.save
user.confirmed_at = Time.zone.now
user.confirmed_at
user.email
user.name
user.confirmed_at
response.body
get '/'
exit
password
user.email
response.body
get '/'
response.body
exit
click_link_or_button
visit
visit '/'
continue
response.body
get root_path
continue
post user_session_path, "user[email]": 'user@example.com', 'user[password]': "changeme"
user_session_path
post user_session_path, email: "fake@email.com", password: "Not4Real"
post root_path, junk: true
post user_session_path, email: user.email, password: password
password
exit
current_user
post user_session_path, email: "user@example.com", password: "changeme"
user_session_path
exit
self.class.superclass.superclass
self.class.superclass
self.superclass
self.class
self
exit
continue
contineu
current_user != User.find(params[:id])
current_user.id != params[:id]
current_user.id
params[:id]
current_user.name
continue
user.id
user.admin?
user.name
user = User.find_by(name: "Nick Lalic")
user.name
user = User.first
params[:id]
current_user.id
current_user.id != params[:id]
params[:id]
!current_user.admin? && current_user.id != params[:id]
current_user.admin?
current_user.name
current_user.id
current_user
continue
exit
User.second
User.first
User
@admin.admin?
@admin.id
@admin
exit
short_url.user_id
short_url.id
short_url.title
short_url.url
short_url.valid?
continue
self
url
@url
self.send('url')
self.send('@url')
@url
url
exit
self.send('url')
url
self.send('url')
self.send('@url')
self.send('url')
self
user_id
@user_id
@title
@url
title
url
user_id
id
exit
@url
url
continue
@url
url
continue
@url
url
continue
@url
url
self.class
continue
url
continue
url
@url
url
continue
exit
@url
url
exit
url
email
@email
@name
@url
url
@world!
@hello
@url
exit
@url
url
@url
exit
short_url.errors
short_url.valid?
short_url.errors.clear
short_url.title = "Hello"
short_url
short_url.errors
short_url.reload
short_url.instance_variable_get('@url')
ShortUrl.valid_url?(short_url.url)
short_url.errors.full_messages
short_url.valid?
@short_url
short_url
exit
short_url.url
short_url.instance_variable_get('@url')
short_url.instance_variable.get('@url')
!short_url.instance_variable_get('@url')
ShortUrl.valid_url?(short_url.url)
short_url.errors.clear
short_url.errors.count
short_url.url
short_url.acceptable_url
short_url.errors
short_url.errors.clear
short_url.errors
exit
short_url.errors.count
short_url.valid?
short_url.errors.clear
short_url.errors.add(:url, "sucks")
short_url.valid?
short_url.url = 'http://google.com'
short_url.valid?
short_url.url = 'google.com'
short_url.errors.full_messages
short_url.save
short_url
methods.each { |m| print("#{m}\n") }
methods
@anything
@warden
@db
@record
@model
self.class
this.class
@url
Rails
@Rails
@rails
@app
@controller
@short_url
@model
@controller.errors
@url
@url = ShortUrl.valid_url?(@url)
!(@url)
!@url
if !@url { print('Not!') }
if !@url print("...not!") end
if !@url
!@url
@url
ShortUrl.valid_url?(@url)
short_url.errors.full_messages
short_url.valid?
@url
exit
ShortUrl.valid_url?(@url)
ShortUrl
ShortUrl.valid_url(@url)
@url
short_url.errors.full_messages
short_url.valid?
continue
@controller.send('current_user')
warden.user
exit
warden.user
warden.instance_variable_set('@users', { user: @nick })
warden.user
warden.users
warden.user
exit
@controller.send('current_user')
warden.user
warden.instance_variable_set('@users',{user: @nick})
warden.instance_variable_get('@users')
warden.instance_variable_get('users')
warden.users
warden.instance_variables
warden.user
@controller.send('current_user')
@controller.send('authenticated_user?')
@controller.send('authenticated?')
sign_in(:User, @nick)
exit
warden.class
warden.instance_variable_get('@user')
warden.instance_variable_get('user')
warden.user
warden.@nick
warden.instance_variable_set('user', @nick)
warden.user
warden.authenticated?
warden.instance_variable_set('@user', @nick)
warden.set_instance
warden.set_instance_variable
warden.set_instance_vairable
warden.authenticate @user
warden.authenticate
warden.authenticated?
